trigger:
- master
- feature/*
- hotfix/*
- refs/tags/*

pr: none

stages:
- stage: ci
  displayName: ci

  jobs:
  - job: build
    displayName: Build
    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - script: |
        dotnet tool install Cake.Tool --global --version 0.33.0
        dotnet tool install GitVersion.Tool --global --version 4.0.1-beta1-65
      displayName: Init - .NET - Tools

    - script: |
        export PATH="$PATH:~/.dotnet/tools"
        dotnet cake build.cake --target=publish --artifacts-directory=$(Build.ArtifactStagingDirectory)
      displayName: Build - Publish

    - task: PublishPipelineArtifact@0
      displayName: Publish - Artifacts
      inputs:
        artifactName: ci-build
        targetPath: $(Build.ArtifactStagingDirectory)

    - script: |
        export PATH="$PATH:~/.dotnet/tools"
        dotnet cake build.cake --target=clean --artifacts-directory=$(Build.ArtifactStagingDirectory)
      displayName: Clean - Build

- stage: cd
  displayName: CD
  variables:
  - group: docker-registry-dockerhub
  dependsOn: ci

  jobs:
  - job: deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - script: |
        dotnet tool install Cake.Tool --global --version 0.33.0
        dotnet tool install GitVersion.Tool --global --version 4.0.1-beta1-65
      displayName: Init - .NET - Tools

    - script: |
        docker login --username $DOCKER_LOGIN_USERNAME --password $DOCKER_LOGIN_PASSWORD $DOCKER_LOGIN_SERVER
      displayName: Init - Docker - Login
      env:
        DOCKER_LOGIN_USERNAME: $(docker-registry-username)
        DOCKER_LOGIN_PASSWORD: $(docker-registry-password)
        DOCKER_LOGIN_SERVER: $(docker-registry-server)

    - task: DownloadPipelineArtifact@0
      displayName: Restore - Artifacts
      inputs:
        artifactName: ci-build
        targetPath: '$(Build.ArtifactStagingDirectory)'

    - script: |
        export PATH="$PATH:~/.dotnet/tools"
        dotnet cake deploy.cake --target=publish --artifacts-directory=$(Build.ArtifactStagingDirectory) --docker-registry-target=$(docker-registry-server)/
      displayName: Build - Publish

    - script: |
        export PATH="$PATH:~/.dotnet/tools"
        dotnet cake deploy.cake --target=clean --artifacts-directory=$(Build.ArtifactStagingDirectory) --docker-registry-target=$(docker-registry-server)/
      displayName: Clean - Build

    - script: |
        docker logout $DOCKER_LOGOUT_SERVER
      displayName: Clean - Docker - Logout
      env:
        DOCKER_LOGOUT_SERVER: $(docker-registry-server)
