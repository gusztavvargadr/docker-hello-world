trigger:
- master
- feature*/*
- refs/tags/*

pr: none

pool:
  vmImage: 'ubuntu-16.04'

variables:
- group: docker-registry-dockerhub
- name: docker-image-name
  value: '$(docker-registry-address)$(docker-registry-username)/hello-world'

steps:
- script: docker login --username $(docker-registry-username) --password $DOCKER_REGISTRY_PASSWORD $(docker-registry-address)
  displayName: 'Init'
  env:
    DOCKER_REGISTRY_PASSWORD: $(docker-registry-password)

- task: DotNetCoreCLI@2
  displayName: 'Install Cake'
  inputs:
    command: custom
    custom: tool
    arguments: 'install -g Cake.Tool'

- script: |
    dotnet tool list -g
    env
  displayName: 'List Tools'

- script: |
    dotnet-cake
  displayName: 'Run Cake #1'

- script: |
    dotnet-cake
  displayName: 'Run Cake #2'

- script: docker build --tag build src
  displayName: 'Build'

- script: docker run build
  displayName: 'Test'

# - script: |
#     docker tag build $(docker-image-name):source-version-$(Build.SourceVersion)
#     docker push $(docker-image-name):source-version-$(Build.SourceVersion)

#     docker tag build $(docker-image-name):source-branch-$(Build.SourceBranchName)-latest
#     docker push $(docker-image-name):source-branch-$(Build.SourceBranchName)-latest
#   displayName: 'Publish with source tags'

- script: |
    docker tag build $(docker-image-name):ci-azp-$(Build.BuildNumber)
    docker push $(docker-image-name):ci-azp-$(Build.BuildNumber)

    docker tag build $(docker-image-name):ci-latest
    docker push $(docker-image-name):ci-latest
  displayName: 'Publish for CI build'

- script: |
    docker tag build $(docker-image-name):$(Build.SourceBranchName)
    docker push $(docker-image-name):$(Build.SourceBranchName)

    docker tag build $(docker-image-name):latest
    docker push $(docker-image-name):latest
  displayName: 'Publish for release'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
