trigger:
- master
- feature*/*
- refs/tags/*

pr: none

stages:
- stage: ci
  displayName: ci
  variables:
  - group: docker-registry-dockerhub

  jobs:
  - job: build
    displayName: Build
    pool:
      vmImage: 'ubuntu-16.04'

    steps:
    - script: |
        ls -Ral ..
        git branch -a
        git branch --contains HEAD
        git branch --contains HEAD | tail -1 | awk '{print $NF}'
        # git checkout $$(git branch --contains HEAD | tail -1 | awk '{print $NF}')
        # git branch -a

    - script: |
        dotnet tool install Cake.Tool --global --version 0.33.0
      displayName: Init - .NET - Install Cake

    - script: |
        docker login --username $DOCKER_LOGIN_USERNAME --password $DOCKER_LOGIN_PASSWORD $DOCKER_LOGIN_SERVER
      displayName: Init - Docker - Login
      env:
        DOCKER_LOGIN_USERNAME: $(docker-registry-username)
        DOCKER_LOGIN_PASSWORD: $(docker-registry-password)
        DOCKER_LOGIN_SERVER: $(docker-registry-server)

    - script: |
        ~/.dotnet/tools/dotnet-cake build.cake --target=publish
      displayName: Run - Build - Publish

    - task: ArchiveFiles@2
      displayName: Artifacts - Archive - Source
      inputs:
        rootFolderOrFile: $(Build.SourcesDirectory)
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/source.zip'

    - task: PublishPipelineArtifact@0
      displayName: Artifacts - Publish
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifactName: ci-build

    - script: |
        ~/.dotnet/tools/dotnet-cake build.cake --target=clean
      displayName: Cleanup - Build - Clean

    - script: |
        docker logout $DOCKER_LOGOUT_SERVER
      displayName: Cleanup - Docker - Logout
      env:
        DOCKER_LOGOUT_SERVER: $(docker-registry-server)

- stage: cd
  displayName: CD
  variables:
  - group: docker-registry-dockerhub
  dependsOn: ci

  jobs:
  - deployment: deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-16.04'
    environment: Default

    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - script: |
              ls -Ral ..

          - script: |
              dotnet tool install Cake.Tool --global --version 0.33.0
            displayName: Init - .NET - Install Cake

          - script: |
              docker login --username $DOCKER_LOGIN_USERNAME --password $DOCKER_LOGIN_PASSWORD $DOCKER_LOGIN_SERVER
            displayName: Init - Docker - Login
            env:
              DOCKER_LOGIN_USERNAME: $(docker-registry-username)
              DOCKER_LOGIN_PASSWORD: $(docker-registry-password)
              DOCKER_LOGIN_SERVER: $(docker-registry-server)

          - script: |
              ~/.dotnet/tools/dotnet-cake build.cake --target=restore
            displayName: Run - Build - Restore

          - script: |
              ~/.dotnet/tools/dotnet-cake build.cake --target=clean
            displayName: Cleanup - Build - Clean

          - script: |
              docker logout $DOCKER_LOGOUT_SERVER
            displayName: Cleanup - Docker - Logout
            env:
              DOCKER_LOGOUT_SERVER: $(docker-registry-server)
