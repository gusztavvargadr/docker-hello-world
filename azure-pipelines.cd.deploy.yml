parameters:
  dockerRegistryServer: ''
  dockerRegistryUsername: ''
  dockerRegistryPassword: ''

steps:
- template: azure-pipelines.core.init-dotnet-tools.yml

- script: |
    docker login --username $DOCKER_LOGIN_USERNAME --password $DOCKER_LOGIN_PASSWORD $DOCKER_LOGIN_SERVER
  displayName: Init - Docker - Login
  env:
    DOCKER_LOGIN_SERVER: ${{ parameters.dockerRegistryServer }}
    DOCKER_LOGIN_USERNAME: ${{ parameters.dockerRegistryUsername }}
    DOCKER_LOGIN_PASSWORD: ${{ parameters.dockerRegistryPassword }}
  condition: and(succeeded(), ne('${{ parameters.dockerRegistryUsername }}', ''))

- task: DownloadPipelineArtifact@0
  displayName: Restore - Artifacts
  inputs:
    artifactName: ci-build
    targetPath: '$(Build.ArtifactStagingDirectory)'

- script: |
    export PATH="$PATH:~/.dotnet/tools"
    dotnet cake deploy.cake --target=publish --artifacts-directory=$(Build.ArtifactStagingDirectory) --docker-registry-target=${{ parameters.dockerRegistryServer }}/
  displayName: Build - Publish

- script: |
    export PATH="$PATH:~/.dotnet/tools"
    dotnet cake deploy.cake --target=clean --artifacts-directory=$(Build.ArtifactStagingDirectory) --docker-registry-target=${{ parameters.dockerRegistryServer }}/
  displayName: Clean - Build

- script: |
    docker logout $DOCKER_LOGOUT_SERVER
  displayName: Clean - Docker - Logout
  env:
    DOCKER_LOGOUT_SERVER: ${{ parameters.dockerRegistryServer }}
  condition: and(succeeded(), ne('${{ parameters.dockerRegistryUsername }}', ''))
