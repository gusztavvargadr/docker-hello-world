parameters:
  configurations: []

jobs:
- job: build
  strategy:
    matrix:
      ${{ each configuration in parameters.configurations }}:
        ${{ configuration.os }}_${{ configuration.arch }}:
          os: ${{ configuration.os }}
          arch: ${{ configuration.arch }}
          vmImage: ${{ configuration.vmImage }}

  displayName: Build - ${{ configuration.os }} - ${{ configuration.arch }}
  pool:
    vmImage: ${{ configuration.vmImage }}

  steps:
  - template: azure-pipelines.core.yml
    parameters:
      os: ${{ configuration.os }}

  - script: |
      dotnet cake build.cake --target=publish --configuration=${{ configuration.os }}-${{ configuration.arch }} --artifacts-directory=$(Build.ArtifactStagingDirectory)
    displayName: Build - Publish

  - task: PublishPipelineArtifact@0
    displayName: Publish - Artifacts
    inputs:
      artifactName: build-${{ configuration.os }}-${{ configuration.arch }}
      targetPath: $(Build.ArtifactStagingDirectory)

  - script: |
      dotnet cake build.cake --target=clean --configuration=${{ configuration.os }}-${{ configuration.arch }} --artifacts-directory=$(Build.ArtifactStagingDirectory)
    displayName: Clean - Build
    condition: always()

- ${{ each configuration in parameters.configurations }}:
  - job: build_${{ configuration.os }}_${{ configuration.arch }}
    displayName: Build - ${{ configuration.os }} - ${{ configuration.arch }}
    pool:
      vmImage: ${{ configuration.vmImage }}

    steps:
    - template: azure-pipelines.core.yml
      parameters:
        os: ${{ configuration.os }}

    - script: |
        dotnet cake build.cake --target=publish --configuration=${{ configuration.os }}-${{ configuration.arch }} --artifacts-directory=$(Build.ArtifactStagingDirectory)
      displayName: Build - Publish

    - task: PublishPipelineArtifact@0
      displayName: Publish - Artifacts
      inputs:
        artifactName: build-${{ configuration.os }}-${{ configuration.arch }}
        targetPath: $(Build.ArtifactStagingDirectory)

    - script: |
        dotnet cake build.cake --target=clean --configuration=${{ configuration.os }}-${{ configuration.arch }} --artifacts-directory=$(Build.ArtifactStagingDirectory)
      displayName: Clean - Build
      condition: always()
