steps:
- template: azure-pipelines.core.init-dotnet-tools.yml

- script: |
    docker login --username $DOCKER_LOGIN_USERNAME --password $DOCKER_LOGIN_PASSWORD $DOCKER_LOGIN_SERVER
  displayName: Init - Docker - Login
  env:
    DOCKER_LOGIN_SERVER: $(docker-registry-server)
    DOCKER_LOGIN_USERNAME: $(docker-registry-username)
    DOCKER_LOGIN_PASSWORD: $(docker-registry-password)
  condition: and(succeeded(), ne(variables['docker-registry-username'], ''))

- task: DownloadPipelineArtifact@0
  displayName: Restore - Artifacts
  inputs:
    artifactName: ci-build
    targetPath: '$(Build.ArtifactStagingDirectory)'

- script: |
    export PATH="$PATH:~/.dotnet/tools"
    dotnet cake deploy.cake --target=publish --artifacts-directory=$(Build.ArtifactStagingDirectory) --package-version=$(docker-image-tag) --package-registry=$(docker-registry-server)
  displayName: Build - Publish

- script: |
    export PATH="$PATH:~/.dotnet/tools"
    dotnet cake deploy.cake --target=clean --artifacts-directory=$(Build.ArtifactStagingDirectory) --package-version=$(docker-image-tag) --package-registry=$(docker-registry-server)
  displayName: Clean - Build
  condition: always()

- script: |
    docker logout $DOCKER_LOGOUT_SERVER
  displayName: Clean - Docker - Logout
  env:
    DOCKER_LOGOUT_SERVER: $(docker-registry-server)
  condition: ne(variables['docker-registry-username'], '')
